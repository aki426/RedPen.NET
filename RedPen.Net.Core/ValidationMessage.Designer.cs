//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedPen.Net.Core {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ValidationMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationMessage() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RedPen.Net.Core.ValidationMessage", typeof(ValidationMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   The number of commas ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CommaNumber {
            get {
                return ResourceManager.GetString("CommaNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found contraction &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Contraction {
            get {
                return ResourceManager.GetString("Contraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found multiple conjunctive particle: &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DoubledConjunctiveParticleGa {
            get {
                return ResourceManager.GetString("DoubledConjunctiveParticleGa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found repeated Joshi word &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DoubledJoshi {
            get {
                return ResourceManager.GetString("DoubledJoshi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found repeated word &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DoubledWord {
            get {
                return ResourceManager.GetString("DoubledWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found double negative expression &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DoubleNegative {
            get {
                return ResourceManager.GetString("DoubleNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found duplicated section (starts from line {0}). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DuplicatedSection {
            get {
                return ResourceManager.GetString("DuplicatedSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The section &quot;{0}&quot; is empty. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EmptySection {
            get {
                return ResourceManager.GetString("EmptySection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid end of sentence &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EndOfSentence {
            get {
                return ResourceManager.GetString("EndOfSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {1}% of sentences start with &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FrequentSentenceStart_SentenceStartTooFrequent {
            get {
                return ResourceManager.GetString("FrequentSentenceStart_SentenceStartTooFrequent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The section &quot;{0}&quot; (level {1}) is misplaced. It should have level of {2}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string GappedSection {
            get {
                return ResourceManager.GetString("GappedSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found Hankaku Kana character &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HankakuKana {
            get {
                return ResourceManager.GetString("HankakuKana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The length of header ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string HeaderLength {
            get {
                return ResourceManager.GetString("HeaderLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This phrase &quot;{0}&quot; should be hyphenated. ie: &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Hyphenation_HyphenatedInDictionary {
            get {
                return ResourceManager.GetString("Hyphenation_HyphenatedInDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid expression &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InvalidExpression {
            get {
                return ResourceManager.GetString("InvalidExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid symbol &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InvalidSymbol {
            get {
                return ResourceManager.GetString("InvalidSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid word &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InvalidWord {
            get {
                return ResourceManager.GetString("InvalidWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found ambiguous noun conjunction: &quot;...{0}...&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseAmbiguousNounConjunction {
            get {
                return ResourceManager.GetString("JapaneseAmbiguousNounConjunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid anchor expression &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseAnchorExpression {
            get {
                return ResourceManager.GetString("JapaneseAnchorExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found broken japanese expression (missing &quot;Ra&quot;): &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseBrokenExpression {
            get {
                return ResourceManager.GetString("JapaneseBrokenExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found possible Japanese word &quot;{0}&quot; is variations of &quot;{1}&quot; at {2} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseExpressionVariation_Normal {
            get {
                return ResourceManager.GetString("JapaneseExpressionVariation_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found possible Japanese word variations &quot;{0}&quot;, &quot;{1}&quot; at {2} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseExpressionVariation_SameCount {
            get {
                return ResourceManager.GetString("JapaneseExpressionVariation_SameCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found non-joyo kanji: &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseJoyoKanji {
            get {
                return ResourceManager.GetString("JapaneseJoyoKanji", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid number expression &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseNumberExpression {
            get {
                return ResourceManager.GetString("JapaneseNumberExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid Japanese Style &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string JapaneseStyle {
            get {
                return ResourceManager.GetString("JapaneseStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid Katakana end-hyphen &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KatakanaEndHyphen {
            get {
                return ResourceManager.GetString("KatakanaEndHyphen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found a Katakana word &quot;{0}&quot;, which is similar to &quot;{1}&quot; at position {2}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KatakanaSpellCheck {
            get {
                return ResourceManager.GetString("KatakanaSpellCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The list item is nested too deeply. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ListLevel {
            get {
                return ResourceManager.GetString("ListLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found too long kanji chain: &quot;{0}&quot; ({1}.) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LongKanjiChain {
            get {
                return ResourceManager.GetString("LongKanjiChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number {0} has too many decimal delimiters. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NumberFormat_TooManyDecimals {
            get {
                return ResourceManager.GetString("NumberFormat_TooManyDecimals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number {0} requires a delimiter every three digits (eg: 1,000.00 or 1.000,00). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NumberFormat_UndelimitedSequenceTooLong {
            get {
                return ResourceManager.GetString("NumberFormat_UndelimitedSequenceTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number {0} has a delimiter in the wrong position. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NumberFormat_UndelimitedSequenceTooShort {
            get {
                return ResourceManager.GetString("NumberFormat_UndelimitedSequenceTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found an invalid Okurigana expression &quot;{0}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Okurigana {
            get {
                return ResourceManager.GetString("Okurigana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of paragraphs ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParagraphNumber {
            get {
                return ResourceManager.GetString("ParagraphNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid beginning of paragraph &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParagraphStartWith {
            get {
                return ResourceManager.GetString("ParagraphStartWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parenthesized sentences are nested too deeply. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParenthesizedSentence_NestingLevelTooDeep {
            get {
                return ResourceManager.GetString("ParenthesizedSentence_NestingLevelTooDeep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Too many parenthesized sentences. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParenthesizedSentence_SubsentenceTooFrequent {
            get {
                return ResourceManager.GetString("ParenthesizedSentence_SubsentenceTooFrequent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parenthesized sentence is too long. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ParenthesizedSentence_SubsentenceTooLong {
            get {
                return ResourceManager.GetString("ParenthesizedSentence_SubsentenceTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two left quotation marks in succession. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_DoubleLeft {
            get {
                return ResourceManager.GetString("Quotation_DoubleLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Two right quotation marks in succession. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_DoubleRight {
            get {
                return ResourceManager.GetString("Quotation_DoubleRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left quotation mark is missing. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_LeftExist {
            get {
                return ResourceManager.GetString("Quotation_LeftExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Left quotation mark does not have a space. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_LeftSpace {
            get {
                return ResourceManager.GetString("Quotation_LeftSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right quotation mark is missing. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_RightExist {
            get {
                return ResourceManager.GetString("Quotation_RightExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Right quotation mark does not have a space. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Quotation_RightSpace {
            get {
                return ResourceManager.GetString("Quotation_RightSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is considered redundant expression. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string RedundantExpression {
            get {
                return ResourceManager.GetString("RedundantExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of characters in the section ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SectionLength {
            get {
                return ResourceManager.GetString("SectionLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The section &quot;{0}&quot; is too deep. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SectionLevel {
            get {
                return ResourceManager.GetString("SectionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The length of the sentence ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SentenceLength {
            get {
                return ResourceManager.GetString("SentenceLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Whitespace does not exist at the beginning of the sentence. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpaceBeginningOfSentence {
            get {
                return ResourceManager.GetString("SpaceBeginningOfSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Space not present after an alphabetical word. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpaceWithAlphabeticalExpression_After {
            get {
                return ResourceManager.GetString("SpaceWithAlphabeticalExpression_After", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Space not present before an alphabetical word. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpaceWithAlphabeticalExpression_Before {
            get {
                return ResourceManager.GetString("SpaceWithAlphabeticalExpression_Before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Space not allowed to exist around the alphabetical word &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpaceWithAlphabeticalExpression_Forbidden {
            get {
                return ResourceManager.GetString("SpaceWithAlphabeticalExpression_Forbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found possibly misspelled word &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Spelling {
            get {
                return ResourceManager.GetString("Spelling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sentence starts with a lowercase character &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StartWithCapitalLetter {
            get {
                return ResourceManager.GetString("StartWithCapitalLetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found similar two sentences in succession: &quot;{0}&quot; and &quot;{1}&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SuccessiveSentence {
            get {
                return ResourceManager.GetString("SuccessiveSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found word &quot;{0}&quot; repeated twice in succession. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SuccessiveWord {
            get {
                return ResourceManager.GetString("SuccessiveWord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found invalid word &quot;{0}&quot;. Use the synonym &quot;{1}&quot; instead. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SuggestExpression {
            get {
                return ResourceManager.GetString("SuggestExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Need whitespace after symbol &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SymbolWithSpace_After {
            get {
                return ResourceManager.GetString("SymbolWithSpace_After", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Need whitespace before symbol &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SymbolWithSpace_Before {
            get {
                return ResourceManager.GetString("SymbolWithSpace_Before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Need whitespace before and after symbol &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SymbolWithSpace_BeforeAfter {
            get {
                return ResourceManager.GetString("SymbolWithSpace_BeforeAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found noun &quot;{0}&quot; at end of sentence. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Taigendome {
            get {
                return ResourceManager.GetString("Taigendome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The expanded form of the acronym {0} is not present in the document. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnexpandedAcronym_UnexpandedAcronym {
            get {
                return ResourceManager.GetString("UnexpandedAcronym_UnexpandedAcronym", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The section is void. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string VoidSection {
            get {
                return ResourceManager.GetString("VoidSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is considered a weak expression. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WeakExpression_WeakExpression {
            get {
                return ResourceManager.GetString("WeakExpression_WeakExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The word &quot;{0}&quot; comprises {1}% of all words. Expected around {2}%. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordFrequency_WordUsedTooFrequently {
            get {
                return ResourceManager.GetString("WordFrequency_WordUsedTooFrequently", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of words ({0}) exceeds the maximum of {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WordNumber {
            get {
                return ResourceManager.GetString("WordNumber", resourceCulture);
            }
        }
    }
}
